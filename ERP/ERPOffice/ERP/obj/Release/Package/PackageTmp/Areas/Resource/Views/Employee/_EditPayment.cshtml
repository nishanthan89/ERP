@model ERP.Resource.Models.EmployeePaymentBO
@*<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@

@*@using (Ajax.BeginForm("EditEmployee", "Employee", new AjaxOptions { HttpMethod = "POST", OnSuccess = "SaveEmployeePayment" }))*@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal well">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmployeePayID)
        @*@Html.HiddenFor(model => model.employeePaymentBO.EmployeeID)*@
        @*<div class="form-group" style="display:none">
                @Html.LabelFor(model => model.EmployeePayID, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.EmployeePayID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmployeePayID, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @*<div class="form-group" style="display:none">
                @Html.LabelFor(model => model.employeePaymentBO.EmployeeID, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.employeePaymentBO.EmployeeID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.employeePaymentBO.EmployeeID, "", new { @class = "text-danger text-left" })
                </div>
            </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.PaymentAmount, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-7">
                <div class="input-group">
                    <input type="button" value="@MvcApplication.Currency" style="width:40px;height:30px;border-radius: 3px;" } class="form-control input-group-addon">
                    @*@MvcApplication.Currency*@
                    @Html.EditorFor(model => model.PaymentAmount, new { htmlAttributes = new { @class = "form-control", style = "width:165px;height:30px;border-radius: 3px;" } })@*border-radius: 10px;*@
                    @Html.ValidationMessageFor(model => model.PaymentAmount, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentTypeID, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-7">
                @Html.DropDownListFor(model => model.PaymentTypeID, ViewContext.Controller.ViewBag.PaymentType as IEnumerable<SelectListItem>, "-- Select --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PaymentTypeID, "", new { @class = "text-danger text-left" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.StartDate, new { @class = "form-control", nowifnull = true })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.EndDate)
                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @*@if (Model.EmployeePayID==null)
            {
                Model.EmployeePayID = 0;
            }*@

        <div class="text-center">
            @*<button onclick="SaveEmployeePayment()" class="btn btn-small btn-default">@ViewBag.ButtonName</button>*@
            <a class="btn btn-default" data-toggle="tooltip" title="Create" role="button" onclick="SaveEmployeePayment()">&nbsp; @ViewBag.ButtonName</a>

            @*@if (Model.EmployeePayID == null)
                {
                    <a class="btn btn-default" data-toggle="tooltip" title="Create" role="button" onclick="SaveEmployeePayment()">&nbsp; Save</a>
                }
                else
                {
                    <a class="btn btn-default" data-toggle="tooltip" title="Update" role="button" onclick="UpdateEmployeePayment(@Model.EmployeePayID)">&nbsp; Update</a>
                }*@
            @* <a href="@Url.Action("EditEmployee","Employee",new { area = "Resource"})" class="btn btn-default" role="button">Cancel</a>*@
            <a class="btn btn-default" data-toggle="tooltip" title="Cancel" role="button" onclick="CancelEmployeePayment()">&nbsp; Cancel</a>
        </div>
    </div>

    @*<div class="form-group col-lg-6 text-center">
            <a href="@Url.Action("EditEmployee","Employee")" role="button"><img src="@Url.Content("~/Content/dist/img/back.png")" data-toggle="tooltip" title="Back to List" style="width:120px; height:320px;"></a>
        </div>*@
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
