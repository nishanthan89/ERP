@model ERP.Utility.Models.ShiftPatternBO

@using (Ajax.BeginForm("CreateShiftPattern", "MasterInfo", new AjaxOptions { HttpMethod = "POST", OnSuccess = "SaveShiftPattern" })) 
{
    @Html.AntiForgeryToken()
   <br />
    <div class="form-horizontal well">
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
                @Html.LabelFor(model => model.ShiftPatternID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ShiftPatternID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShiftPatternID, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @Html.HiddenFor(model => model.ShiftPatternID)
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShiftStartTime, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.ShiftStartTime, new { htmlAttributes = new { @class = "form-control", min = 0 } })
                @Html.ValidationMessageFor(model => model.ShiftStartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control", min = 0 } })
                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsEnable, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-7">
                @Html.CheckBoxFor(model => model.IsEnable, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsEnable, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BreakDuration, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.BreakDuration, new { htmlAttributes = new { @class = "form-control", min = 0 } })
                @Html.ValidationMessageFor(model => model.BreakDuration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-4 col-md-8">
                @*<input type="submit" value="Create" id="CreateId" class="btn btn-success" title="Save Shift Pattern" />
                <input type="submit" value="Update" id="UpdateId" class="btn btn-success" title="Update Shift Pattern" hidden="hidden" />*@
                <input type="submit" value=@ViewBag.ButtonName class="btn btn-success" data-toggle="tooltip" title= "@ViewBag.ButtonName the Shift Pattern"/>
                <input type="button" value="Cancel" class="btn btn-default" data-toggle="tooltip" title="Cancel Shift Pattern creation" role="button" onclick="CancelButton()" />
            </div>
        </div>
    </div>
}


@*<script>
    var condition =@Model.ShiftPatternID;
    if (condition == 0)  {
        $('#CreateId').show();
        $('#UpdateId').hide();
    } else {
        $('#CreateId').hide();
        $('#UpdateID').show();
    }
</script>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
