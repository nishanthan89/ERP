@model ERP.Utility.ViewModels.SkillView


@using (Ajax.BeginForm("CreateSkill", "MasterInfo", new AjaxOptions { HttpMethod = "POST", OnSuccess = "Save" }))

{
    @Html.AntiForgeryToken()@*This ensures that a form being posted to the server was actually generated by the same server*@
    @Html.HiddenFor(model => model.Skill.SkillID)
    <div class="text-left">
        <a class="btn" onclick="GetSkillList()"><span class="glyphicon glyphicon-backward"></span> Back To List</a>
    </div>
    <div class="form-horizontal">

        <div class="col-md-offset-3">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Skill.SkillName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Skill.SkillName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Skill.SkillName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Skill.SkillDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Skill.SkillDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Skill.SkillDescription, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
<br /><br />
        @*<div>
            <table>
                <thead>
                    <tr class=".visible-lg-3">
                        @for (int i = 0; i < 3; i++)
                        {
                            <th class="col-md-2">
                                @Html.DisplayName("Skill Category")
                            </th>
                            <th class="col-md-2">
                                @Html.DisplayName("Skill Level")
                            </th>
}
                    </tr>
                </thead>
            </table>
        </div>*@
        <div class="col-md-6 col-md-offset-3">
            <div class="table-responsive">

                <table class="table table-hover table-striped table-bordered" id="skillTable" style="border-bottom:hidden">
                    @*<table class="table table-responsive" id="skillTable">*@
                        <thead>
                            <tr>
                                <th class="col-md-3">
                                    @Html.DisplayName("Skill Category")
                                </th>
                                <th class="col-md-3">
                                    @Html.DisplayName("Skill Level")
                                </th>
                            </tr>
                        </thead>

                        @if (Model.SkillCategoryGroup.Count() != 0 || Model != null)
                        {
                            for (int i = 0; i < Model.SkillCategoryGroup.Count; ++i)
                            {


                                <tr>
                                    <td>
                                        @Html.CheckBoxFor(model => model.SkillCategoryGroup[i].isSelected)
                                        @Html.HiddenFor(model => model.SkillCategoryGroup[i].CategoryID)<span>&nbsp;&nbsp;</span>

                                        @Html.DisplayFor(model => model.SkillCategoryGroup[i].CategoryName)
                                        @Html.HiddenFor(model => model.SkillCategoryGroup[i].CategoryName)
                                    </td>
                                    <td>
                                        @*@Html.DropDownListFor(model => model.SkillCategoryGroup[i].SkillLevelID, ViewContext.Controller.ViewBag.SkillLevel as IEnumerable<SelectListItem>, "-- Select --")*@
                                        @Html.DropDownListFor(
                                             model => model.SkillCategoryGroup[i].SkillLevelID,
                                                                                     new SelectList(
                                                                                        ViewBag.SkillLevel, "Value", "Text",
                                                                                            @Model.SkillCategoryGroup[i].SkillLevelID), "-- Select --")
                                    </td>
                                </tr>
}
                        }
                    </table>
                   
</div>
               

                    
            </div>


        <div class="form-group">
            <div class="col-md-offset-5 col-md-4">
                @if (Model.Skill.SkillID == null || Model.Skill.SkillID == 0)
                {
                    <input type="submit" value="Create" class="btn btn-success" data-toggle="tooltip" title="Create" />
}
                else
                {
                    <input type="submit" value="Update" class="btn btn-success" data-toggle="tooltip" title="Update" />
}
                <input type="button" value="Cancel" class="btn btn-default" data-toggle="tooltip" title="Cancel" role="button" onclick="Cancel()" />

            </div>
        </div>

                    @*<div class="col-md-4 col-md-offset-5">
                        <br /><br />
                        <input type="submit" value="Save" class="btn btn-success" />
                        <input type="button" value="Cancel" class="btn btn-default" onclick="Cancel()" />

                    </div>*@
        </div>


        }
@Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function () {        //DataTable Function
        $('#skillTable').DataTable({
            "displayLength": 5,
            bPaginate: false,     //disables Pagination
            bFilter: true,       //Enables search text
            bInfo: false,
            "language": {       //When the list is empty
                "zeroRecords": "<p class='text-danger'>No Results Found</p>",
                "text-color": "#7f1416"
            }
        });
        $("#skillTable").freezeHeader({  //FreezeHeader function
            offset: '50px'
        });
       
    });

    //$("[type=checkbox]").change(function myfunction() {

    //    if ($("[type=checkbox]").prop('checked') == true) {
    //        $('select').removeAttr('disabled');
    //    }
    //});
        
    </script>



