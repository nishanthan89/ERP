@model ERP.Admin.Models.BranchInfoBO
@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@

<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

@using (Ajax.BeginForm("CreateBranch", "BranchInfo", new AjaxOptions { HttpMethod = "POST", OnSuccess = "SavedBranch", OnFailure = "UnsavedBranch" }))
{

    @Html.AntiForgeryToken()



    <div class="panel panel-success">
        <div class="panel-heading">
            <div class="panel-title list-inline">
                <b>Branch Information </b>  
                
                @if (Model.BranchID == 0)
                {
                 <b style="color:peru"> >> Create New Branch </b>
                }
                else
                {

                    <b style="color:peru"> >> Update Branch Details </b>
                }
            </div>
        </div>

        <div class="panel-body">
            <div id="CreateEdit">
                <div>
                    <a href="@Url.Action("Index", "BranchInfo", new { area = "Admin" })"><span class="glyphicon glyphicon-backward"></span>&nbsp; Back to List</a>
                </div>

                <div class="panel-body">
                    <div class="pull-right">
                        @*@Html.ValidationSummary(false,"", new { @class = "text-danger" })*@
                        @Html.HiddenFor(model => model.BranchID)
                    </div>

                    <div class="col-md-6">
                        <div class="form-group-sm">
                            @Html.LabelFor(model => model.BranchName, new { @class = "col-md-4 control-label" })
                            <div>
                                @Html.EditorFor(model => model.BranchName, new { htmlAttributes = new { @class = "form-control" } })
                            </div>

                            @Html.ValidationMessageFor(model => model.BranchName, "", new { @class = "text-danger col-md-offset-4" })
                        </div>
                        <div class="form-group-sm">
                            @Html.LabelFor(model => model.BranchCode, new { @class = "col-md-4 control-label" })
                            <div>
                                @Html.EditorFor(model => model.BranchCode, new { htmlAttributes = new { @class = "form-control" } })
                            </div>

                            @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger col-md-offset-4" })
                        </div>
                        <div class="form-group-sm">
                            @Html.LabelFor(model => model.FaxNumber, new { @class = "col-md-4 control-label" })
                            <div>
                                @Html.EditorFor(model => model.FaxNumber, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.FaxNumber, "", new { @class = "text-danger col-md-offset-4" })
                        </div>
                        <div class="form-group-sm">
                            @Html.LabelFor(model => model.VATnumber, new { @class = "col-md-4 control-label" })
                            <div>
                                @Html.EditorFor(model => model.VATnumber, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.VATnumber, "", new { @class = "text-danger col-md-offset-4" })
                        </div>
                        <div class="form-group-sm">
                            @Html.LabelFor(model => model.TelephoneNumber, new { @class = "col-md-4 control-label" })
                            <div>
                                @Html.EditorFor(model => model.TelephoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.TelephoneNumber, "", new { @class = "text-danger col-md-offset-4" })
                        </div><br />

                        <div class="form-group-sm">
                            @Html.LabelFor(model => model.BranchType, new { @class = "col-md-4 control-label" })
                            <div>
                                @Html.DropDownListFor(model => model.BranchTypeID, new SelectList(ViewBag.BranchType as IEnumerable<SelectListItem>, "Value", "Text"), "-- Select --", htmlAttributes: new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.BranchTypeID, "", new { @class = "text-danger col-md-offset-4" })
                        </div>

                        <div class="form-group-sm">
                            @Html.LabelFor(model => model.BranchStatus, new { @class = "col-md-4 control-label" })
                            <div>
                                @Html.DropDownListFor(model => model.BranchStatusID, new SelectList(ViewBag.BranchStatus as IEnumerable<SelectListItem>, "Value", "Text"), "-- Select --", htmlAttributes: new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.BranchStatusID, "", new { @class = "text-danger col-md-offset-4" })
                        </div>

                    </div>
                    <div class="col-md-6">


                        <div id="AddressDIV">
                            @*@Html.Partial("_Address", Model.Address, new ViewDataDictionary { TemplateInfo = new TemplateInfo { HtmlFieldPrefix = "Address" } });*@

                            @if (Model != null)
                            {

                                Html.RenderPartial("_Address", Model.Address, new ViewDataDictionary
                                { TemplateInfo = new System.Web.Mvc.TemplateInfo() { HtmlFieldPrefix = "Address" }
                                });


                            }


                        </div>

                    </div>

                    <div class="form-group-sm">
                        <div class="col-md-offset-5">

                            @if (Model != null && Model.BranchID == 0)
                            {

                                <input type="submit" class="btn btn-success" value="Save" id="SaveID" title="Save The Branch details" />
                            }
                            else
                            {
                                <input type="submit" value="Update" id="UpdateId" class="btn btn-success" title="Update The Branch details" />
                            }
                            @* <input type="button" value="Cancel" class="btn btn-default" data-toggle="tooltip" title="Cancel The Branch Details" role="button" onclick="CreateBranchFun()" />*@
                            <input type="reset" value="Reset" class="btn btn-default" data-toggle="tooltip" title="Reset The Branch Details" role="button" />
                            <a href="@Url.Action("Index", "BranchInfo", new { area = "Admin" })"><input type="button" class="btn btn-default" value="Cancel" title="Go Back to Branch List " /></a>
                        </div>
                    </div>
                </div>
            </div>
            </div>
    </div>
            }



