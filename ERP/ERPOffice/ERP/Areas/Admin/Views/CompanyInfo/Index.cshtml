@model ERP.Admin.ViewModels.CompanyInfoViewModel
@using ERP.MvcHelpers
@{
    ViewBag.Title = "CompanyInfo";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}



    @* @using (Ajax.BeginForm("Update", "CompanyInfo", new AjaxOptions { HttpMethod = "POST", OnSuccess = "Update" }, new { enctype = "multipart/form-data" })) *@
    @*@using (Ajax.BeginForm("", "", new AjaxOptions() { HttpMethod = "POST", OnSuccess = "Update", InsertionMode = InsertionMode.Replace }, new { enctype = "multipart/form-data", action = "/CompanyInfo/Update" }))*@
    @using (Html.BeginForm("Update", "CompanyInfo", FormMethod.Post, new { enctype = "multipart/form-data" }))

    {

        @Html.AntiForgeryToken()

        <div class="panel panel-success">
            <div class="panel-heading clearfix">
                <h3 class="panel-title pull-left" style="padding-top: 7.5px;"><b>Company Information</b></h3>
                <div class="form-inline pull-right">
                    @*<span>Upload Your Company Logo:</span> <input type="file" name="UploadFile" id="txtUploadFile" class="makethispretty" multiple />*@
                </div>
            </div>

            <div class="panel-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group-sm">
                            @Html.LabelFor(model => model.CompanyName, new { @class = "col-md-4 control-label" })
                            <div>
                                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger col-md-offset-4" })
                            </div>
                        </div>
                        <div class="form-group-sm">
                            @Html.LabelFor(model => model.RegistrationNo, new { @class = "col-md-4 control-label" })
                            <div>
                                @Html.EditorFor(model => model.RegistrationNo, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.RegistrationNo, "", new { @class = "text-danger col-md-offset-4" })
                        </div>
                        <div class="form-group-sm">
                            @Html.LabelFor(model => model.VATNo, new { @class = "col-md-4 control-label" })
                            <div>
                                @Html.EditorFor(model => model.VATNo, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.VATNo, "", new { @class = "text-danger col-md-offset-4" })
                        </div>
                        <div class="form-group-sm">
                            @Html.LabelFor(model => model.EmailAddress, new { @class = "col-md-4 control-label" })
                            <div>
                                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger col-md-offset-4" })
                        </div>

                        <div class="form-group-sm">
                            @Html.LabelFor(model => model.FaxNo, new { @class = "col-md-4 control-label" })
                            <div>
                                @Html.EditorFor(model => model.FaxNo, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.FaxNo, "", new { @class = "text-danger col-md-offset-4" })
                        </div><br />
                        <div class="form-group-sm">
                            @Html.LabelFor(model => model.TelephoneNo, new { @class = "col-md-4 control-label" })
                            <div>
                                @Html.EditorFor(model => model.TelephoneNo, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.TelephoneNo, "", new { @class = "text-danger col-md-offset-4" })
                        </div><br />
                        <div class="form-group-sm">
                            @Html.LabelFor(model => model.Website, new { @class = "col-md-4 control-label" })
                            <div>
                                @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger col-md-offset-4" })

                        </div><br />
                        <div class="form-group-sm">
                            @Html.LabelFor(model => model.TimeZone, new { @class = "col-md-4 control-label" })
                            <div>
                                @Html.DropDownListFor(model => model.TimeZoneID, new SelectList(ViewBag.TimeZoneList as IEnumerable<SelectListItem>, "Value", "Text"), "-- Select --", htmlAttributes: new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.TimeZoneID, "", new { @class = "text-danger col-md-offset-4" })
                        </div>
                        <div class="form-group-sm">
                            @Html.LabelFor(model => model.DateFormat, new { @class = "col-md-4 control-label" })
                            <div>

                                @Html.DropDownListFor(model => model.DateFormatID, new SelectList(ViewBag.DateFormatList as IEnumerable<SelectListItem>, "Value", "Text"), "-- Select --", htmlAttributes: new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.DateFormatID, "", new { @class = "text-danger col-md-offset-4" })
                        </div>
                        <div class="form-group-sm ">
                            @Html.LabelFor(model => model.Currency, new { @class = "col-md-4 control-label" })
                            <div>
                                @Html.DropDownListFor(model => model.CurrencyID, new SelectList(ViewBag.CurrencyList as IEnumerable<SelectListItem>, "Value", "Text"), "-- Select --", htmlAttributes: new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.CurrencyID, "", new { @class = "text-danger col-md-offset-4" })
                        </div>

                        <div class="form-group-sm">
                            @Html.LabelFor(model => model.TimeID, new { @class = "col-md-4 control-label" })
                            <div>
                                @Html.DropDownListFor(model => model.TimeID, new SelectList(ViewBag.TimeFormatList as IEnumerable<SelectListItem>, "Value", "Text"), "-- Select --", htmlAttributes: new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.TimeID, "", new { @class = "text-danger col-md-offset-4" })
                        </div>
                    </div>
                    <div class="col-md-6">

                        <div class="form-group-sm" id="AddressDIV">

                            @{
                                Html.RenderPartial("_Address", Model.Address, new ViewDataDictionary
                                { TemplateInfo = new System.Web.Mvc.TemplateInfo() { HtmlFieldPrefix = "Address" }
                                });
                            }

                        </div>

                        <div class="row col-lg-offset-4">
                            @*@Html.Partial("_LogoView",Model)*@

                            <div class="form-group">
                               
                                @if (Model.PhotoString == null)
                                {
                                    <div class="form-group-sm">
                                        <b>Upload Your Profile</b>@*<input id="UploadImg" name="UploadFile" type="file" />*@

                                    
                                        <div id="wrapper" style="margin-top: 10px;">
                                            <input id="UploadImg" name="UploadFile" type="file" class="form-group-sm col-md-8" />
                                           
                                            <a data-toggle="tooltip" title="View Your Logo" role="button"><div id="imgPreview" class="col-md-7"></div>&nbsp;&nbsp;</a>
                                            <a id="image" style="display:none;"><span class="glyphicon glyphicon-remove-sign text-danger" data-toggle="tooltip" title="Remove Logo" role="button" onclick="RemoveImageUpload()"></span></a>

                                        </div>

                                    </div>
                                }
                                </div>

                                <div class="form-group">
                                    @if (Model.PhotoString != null)
                                    {
                                        <div class="form-group-sm">
                                           <b>Your Company Logo</b>  @*<input id="UploadImg" name="UploadFile" type="file" />*@
                                            <div id="wrapper" style="margin-top: 10px;">
                                                <a data-toggle="tooltip" role="button"><div id="imgPreview" class="col-md-7"><img src="@Model.PhotoString" width="200" /></div>&nbsp;&nbsp;</a>
                                                <a><span class="glyphicon glyphicon-remove-sign text-danger" data-toggle="tooltip" title="Remove Logo" role="button" onclick="RemoveImage(id=@Model.LogoID)"></span></a>
                                            </div></div>
                                    }
                                </div>

                            </div>
                        <br /><br />
                            <div class="row col-lg-offset-5">
                               
                                <input type="submit" onclick="Update" class="btn btn-success" value="Update" id="UpdateIdd" />
                                <a href="@Url.Action("Index", "Home", new { area = "" })"><input type="button" class="btn btn-default" value="Cancel" /></a>

                            </div>

                        </div>
                    </div>
                </div>
            </div>
                                }

                                <script>


                                    function Update(result) {
                                        var u = new SpeechSynthesisUtterance(); // VoiceObject Create
                                        if (result.success == true) {
                                            u.text = result.errorMsg;
                                            speechSynthesis.speak(u);
                                            // location.reload();
                                            swal({
                                                title: result.errorMsg,
                                                text: '@Model.CompanyName',
                                                type: "success"
                                            });


                                        }

                                        else {
                                            u.text = result.errorMsg;
                                            speechSynthesis.speak(u);
                                            successMessage(result.errorMsg, 'Error');


                                        }

                                    }

                                    $(document).ready(function () {

                                        $("#UploadImg").on('change', function () {      //UploadProfile Function
                                            //Get count of selected files
                                            //alert("UploadImage")
                                            var countFiles = $(this)[0].files.length;
                                            var imgPath = $(this)[0].value;
                                            var extn = imgPath.substring(imgPath.lastIndexOf('.') + 1).toLowerCase();
                                            var image_holder = $("#imgPreview");
                                            image_holder.empty();
                                            if (extn == "gif" || extn == "png" || extn == "jpg" || extn == "jpeg") {
                                                if (typeof (FileReader) != "undefined") {
                                                    //loop for each file selected for uploaded
                                                    for (var i = 0; i < countFiles; i++) {
                                                        var reader = new FileReader();
                                                        reader.onload = function (e) {
                                                            $("<img />", {
                                                                "src": e.target.result,
                                                                "class": "thumb-image"
                                                            }).appendTo(image_holder);
                                                        }
                                                        image_holder.show();
                                                        if ($("#imgPreview") != null) {
                                                            $("#image").show();
                                                        } else {
                                                            $("#image").hide();
                                                        }
                                                        reader.readAsDataURL($(this)[0].files[i]);
                                                    }
                                                } else {
                                                    alert("This Browser Does Not Support FileReader.");
                                                }
                                            } else {
                                                alert("Please Select Only Images");
                                            }
                                        });
                                    });




                                    function RemoveImageUpload() {
                                        var u = new SpeechSynthesisUtterance();
                                        swal({
                                            title: 'Confirm',
                                            text: 'Would You Like To Delete This Logo?',
                                            type: 'warning',
                                            showCancelButton: true,
                                            confirmButtonText: 'Yes',
                                            cancelButtonText: 'No',
                                            closeOnConfirm: false,
                                        },
                                        function (isConfirm) {

                                            if (isConfirm) {
                                                //DeleteProfile Function
                                                var image_holder = $("#imgPreview");    //Gets the value of Image Preview
                                                var UploadImage_holder = $("#UploadImg");   //Gets the value of Upload image button section
                                                image_holder.empty();       //Empty the image
                                                //image_holder.val('');
                                                u.text = "Logo Is Successfully Removed...";
                                                speechSynthesis.speak(u);
                                                sweetAlert("Logo Is Successfully Removed...");
                                                UploadImage_holder.val('');     //Empty the upload image details
                                                $("#image").hide();     //hides Image Preview panel
                                            }  });
                                    }




                                    function RemoveImage(LogoID) {   //DeleteProfile Function
                                        
                                        //u.text = "Would You Like To Delete This Logo?";
                                        //speechSynthesis.speak(u);
                                        swal({
                                            title: 'Confirm',
                                            text: 'Would You Like To Delete This Logo?',
                                            type: 'warning',
                                            showCancelButton: true,
                                            confirmButtonText: 'Yes',
                                            cancelButtonText: 'No',
                                            closeOnConfirm: false,
                                        },

                                function (isConfirm) {
                                    // alert("Test")
                                    //  alert(isConfirm);
                                    var u = new SpeechSynthesisUtterance();
                                    if (isConfirm) {
                                        $.ajax({
                                            url: '@Url.Action("RemoveLogo", "CompanyInfo")',
                                            type: 'POST',
                                            cache: false,
                                            dataType: 'html',
                                            data: ({ id: LogoID }),
                                            success: function (result) {

                                                var resultObj = jQuery.parseJSON(result);
                                                console.log(resultObj);
                                                if (resultObj.success == true) {
                                                    //alert(resultObj.success)
                                                    console.log(resultObj.success);
                                                    // successMessage(resultObj.errorMsg, 'Success');
                                                     

                                                    //u.text = resultObj.errorMsg;
                                                    //speechSynthesis.speak(u);
                                                    sweetAlert(resultObj.errorMsg);
                                                    //$("#createEditDep").html(result);
                                                    setTimeout(explode, 1000);
                                                    function explode() {

                                                        location.reload();
                                                    }

                                                    @*this.load('@Url.Action("EditEmployee", "Employee")');*@
                                                }
                                                else {
                                                    // alert(resultObj.success)
                                                    console.log(resultObj.success);
                                                    //successMessage(resultObj.errorMsg, 'Error');
                                                    u.text = resultObj.errorMsg;
                                                    speechSynthesis.speak(u);
                                                    sweetAlert(resultObj.errorMsg);
                                                    setTimeout(explode, 1000);
                                                    function explode() {

                                                        location.reload();
                                                    }

                                                }

                                            }
                                        })
                                    }
                                });
                                    }



                                    

                                </script>

                                @section Scripts {
                                    @Scripts.Render("~/bundles/jqueryval")
                                }


@if (!string.IsNullOrEmpty(ViewBag.TempData1))
{
    <script>
        var u1 = new SpeechSynthesisUtterance(); // VoiceObject Create
        u1.text = "@ViewBag.TempData1";
        speechSynthesis.speak(u1);
    </script>
}
@if (!string.IsNullOrEmpty(ViewBag.TempData2))
{
    <script>
        var u1 = new SpeechSynthesisUtterance(); // VoiceObject Create
        u1.text = "@ViewBag.TempData2";
        speechSynthesis.speak(u1);
    </script>
}