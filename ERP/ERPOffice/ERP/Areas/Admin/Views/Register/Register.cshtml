@model ERP.Admin.ViewModels.UserViewModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div>
    <a href="@Url.Action("UserPermission","UserPermission",new { area="Admin"})"><span class="glyphicon glyphicon-backward"></span>&nbsp; Back to List</a>
</div>
<br />
@using (Html.BeginForm("Register", "Register", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
   
       <div class="panel panel-success">
           <div class="panel-heading">Create User</div>
           <div class="panel-body">

               @Html.AntiForgeryToken()
               @Html.ValidationSummary(true, "", new { @class = "text-danger" })
               @Html.HiddenFor(m => m.UserID)
               <div>
                   <div class="col-md-6">
                       @*<a href="@Url.Action("UserPermission","UserPermission")">Back to List</a>*@
                       <div class="form-group-sm">
                           @Html.LabelFor(model => model.TitleID, new { @class = "col-md-4 control-label" })
                           <div>
                               @Html.DropDownListFor(model => model.TitleID, new SelectList(ViewBag.TitleList, "Value", "Text"), "-- Select --", htmlAttributes: new { @class = "form-control" })
                           </div>
                           @Html.ValidationMessageFor(model => model.TitleID, "", new { @class = "text-danger col-md-offset-4" })
                       </div>
                       <div class="form-group-sm">
                           @Html.LabelFor(model => model.FirstName, new { @class = "col-md-4 control-label" })
                           <div>
                               @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                           </div>
                           @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger col-md-offset-4" })
                       </div>
                       <div class="form-group-sm">
                           @Html.LabelFor(model => model.LastName, new { @class = "col-md-4 control-label" })
                           <div>
                               @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                           </div>
                           @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger col-md-offset-4" })
                       </div>

                       @*<div class="form-group-sm">
                            @Html.LabelFor(model => model.Address, new { @class = "col-md-4 control-label" })
                            <div>
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger col-md-offset-4" })
                        </div>*@
                       <div class="form-group-sm">
                           @Html.LabelFor(model => model.JoinDate, new { @class = "control-label col-md-4" })
                           <div class="form-group col-md-7">
                               @Html.EditorFor(model => model.JoinDate, new { htmlAttributes = new { @class = "form-control" }, nowIfNull = true })
                               @Html.ValidationMessageFor(model => model.JoinDate, "", new { @class = "text-danger" })
                           </div>


                       </div>
                       <div class="form-group-sm">
                           @Html.LabelFor(model => model.Telephone, new { @class = "col-md-4 control-label" })
                           <div>
                               @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control" } })
                           </div>
                           @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger col-md-offset-4" })
                       </div>
                       <div class="form-group-sm">
                           @Html.LabelFor(model => model.Mobile, new { @class = "col-md-4 control-label" })
                           <div>
                               @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                           </div>
                           @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger col-md-offset-4" })
                       </div>

                       <div class="form-group-sm form-inline">
                           @Html.LabelFor(model => model.DOB, new { @class = "col-md-4 control-label" })
                           <div class="input-group">
                               @Html.DropDownListFor(model => model.Day, Enumerable.Range(1, 31).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), "Day", htmlAttributes: new { @class = "form-control", style = "width:90px;" })

                               @Html.DropDownListFor(model => model.Month, Enumerable.Range(1, 12).Select(i => new SelectListItem { Value = i.ToString(), Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(i) }), "Month", htmlAttributes: new { @class = "form-control", style = "width:120px;" })

                               @Html.DropDownListFor(model => model.Year, Enumerable.Range(1900, DateTime.Now.Year - 1900 + 1).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }).OrderByDescending(x => x.Text), "Year", htmlAttributes: new { @class = "form-control", style = "width:90px;" })
                           </div>
                           @Html.ValidationMessageFor(model => model.Day, "", new { @class = "text-danger col-md-offset-4" })<br />
                           @Html.ValidationMessageFor(model => model.Month, "", new { @class = "text-danger col-md-offset-4" })<br />
                           @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger col-md-offset-4" })
                       </div>
                   </div>
                   <div class="col-md-6">

                       <div class="form-group-sm">
                           @Html.LabelFor(model => model.EmployeeNO, new { @class = "col-md-4 control-label" })
                           <div>
                               @Html.EditorFor(model => model.EmployeeNO, new { htmlAttributes = new { @class = "form-control" } })
                           </div>
                           @Html.ValidationMessageFor(model => model.EmployeeNO, "", new { @class = "text-danger col-md-offset-4" })
                       </div>
                       <div class="form-group-sm">
                           @Html.LabelFor(model => model.JobTitleID, new { @class = "col-md-4 control-label" })
                           <div>
                               @Html.DropDownListFor(model => model.JobTitleID, new SelectList(ViewBag.JobTitleList, "Value", "Text"), "-- Select --", htmlAttributes: new { @class = "form-control" })
                           </div>
                           @Html.ValidationMessageFor(model => model.JobTitleID, "", new { @class = "text-danger col-md-offset-4" })
                       </div>
                       <div class="form-group-sm">
                           @Html.LabelFor(m => m.Email, new { @class = "col-md-4 control-label" })
                           <div>
                               @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                           </div>
                           @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger col-md-offset-4" })
                       </div>
                       <div class="form-group-sm">
                           @Html.LabelFor(model => model.Username, new { @class = "col-md-4 control-label" })
                           <div>
                               @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                           </div>
                           @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger col-md-offset-4" })
                       </div>
                       @if (String.IsNullOrEmpty(Model.UserID))
                       {
                           <div class="form-group-sm">
                               @Html.LabelFor(m => m.Password, new { @class = "col-md-4 control-label" })
                               <div>
                                   @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                               </div>
                               @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger col-md-offset-4" })
                           </div>
                           <div class="form-group-sm">
                               @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-4 control-label" })
                               <div>
                                   @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                               </div>
                               @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger col-md-offset-4" })
                           </div>
                       }
                       <div class="form-group-sm">
                           @Html.LabelFor(model => model.Status, new { @class = "col-md-4 control-label" })
                           <div>
                               @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                           </div>
                           @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger col-md-offset-4" })
                       </div>
                       <div class="form-group-sm">
                           @Html.LabelFor(model => model.StatusComment, new { @class = "col-md-4 control-label" })
                           <div>
                               @Html.TextAreaFor(model => model.StatusComment, new { htmlAttributes = new { @class = "form-control" }, cols = 50 })
                           </div>
                           @Html.ValidationMessageFor(model => model.StatusComment, "", new { @class = "text-danger col-md-offset-4" })
                       </div>
                   </div>

               </div>
           </div>
        <div id="AddressDIV" class="well">
            <div class="panel panel-success">
                <div class="panel-heading">
                    <h2 class="panel-title">Resource Address</h2>
                </div>
                <div class="panel-body">
                    @{
                        Html.RenderPartial("_Address", Model.AddressViewModel, new ViewDataDictionary
                        {
                            TemplateInfo = new System.Web.Mvc.TemplateInfo() { HtmlFieldPrefix = "AddressViewModel" }
                        });
                    }
                </div>
            </div>
        </div>

            <div class="form-group">
                <div class="col-md-offset-5">
                   
              @if (!String.IsNullOrEmpty(Model.UserID))
              {
                  <input type="submit" class="btn btn-success" value="Update" />
                <input type="reset" class="btn btn-default" value="Reset" />
              }
              else {
                   <input type="submit" class="btn btn-success" value="Register" />
                <input type="reset" class="btn btn-default" value="Reset" />
              }
                </div>
            </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
