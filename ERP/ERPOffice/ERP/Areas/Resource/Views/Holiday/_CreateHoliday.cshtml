@model ERP.Resource.ViewModels.CreateHolidayViewModel
@{
    ViewBag.Title = "Create Holiday";
}
<script src="~/Scripts/jquery-2.0.0.min.js"></script>
@Scripts.Render("~/bundles/bootstrap")
@Styles.Render("~/Content/css")
<div>
    <a href="#" onclick="BackList()"><span class="glyphicon glyphicon-backward"></span>&nbsp; Back to List</a>
</div>
<br />
<div class="panel panel-success">
    <div class="panel-heading">Holiday</div>
    <div class="panel-body">

        @using (Ajax.BeginForm("CreateHoliday", "Holiday", null, new AjaxOptions { HttpMethod = "POST", InsertionMode = InsertionMode.Replace, UpdateTargetId = "holidayPanelDIV",OnSuccess= "onAjaxSuccess", OnFailure= "onAjaxFailure" ,OnBegin= "onAjaxBegin" }))
        {
            @Html.AntiForgeryToken();
            @Html.HiddenFor(model => model.HolidayID);
              @*@Html.HiddenFor(model => model.SearchResourceID);
              @Html.HiddenFor(model => model.Year);
              @Html.HiddenFor(model => model.Month);*@
           
            @Html.HiddenFor(model => model.SearchHoliday.Year);
            @Html.HiddenFor(model => model.SearchHoliday.Month);
            @Html.HiddenFor(model => model.SearchHoliday.SearchResourceID);
            <div class="form-horizontal">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.ResourceID, new { @class = "col-md-4 control-label" })
                    <div class="col-md-2">
                        @Html.DropDownListFor(model => model.ResourceID, new SelectList(ViewBag.ResourceList, "Value", "Text"), "-- Select --", htmlAttributes: new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.ResourceID, "", new { @class = "text-danger col-md-4" })
                    <div id="remainHoliday" class="col-md-4 text text-danger"></div>
                </div>
                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.HolidayTypeID, new { @class = "col-md-4 control-label" })
                    <div class="col-md-2">
                        @Html.DropDownListFor(model => model.HolidayTypeID, new SelectList(ViewBag.HolidayTypeList, "Value", "Text"), "-- Select --", htmlAttributes: new { @class = "form-control"})
                    </div>
                    @Html.ValidationMessageFor(model => model.HolidayTypeID, "", new { @class = "text-danger col-md-4" })
                </div>
                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.BookingHrs, new { @class = "col-md-4 control-label" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.BookingHrs, new { htmlAttributes = new { @class = "form-control", style = "width:156px;" , @type = "number", @min = "0", @step = "0.5", @value = "0" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.BookingHrs, "", new { @class = "text-danger col-md-4" })
                </div>
                <div class="form-group form-group-sm" id="requestOnDIV">
                    @Html.LabelFor(model => model.RequestedOn, new { @class = "col-md-4 control-label" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.RequestedOn, new { htmlAttributes = new { @class = "form-control" }, nowIfNull = true })
                    </div>
                    @Html.ValidationMessageFor(model => model.RequestedOn, "", new { @class = "text-danger col-md-4" })
                </div>
                @if (Model.HolidayID != 0)
                {
                    <div class="form-group form-group-sm">
                        @Html.LabelFor(model => model.StatusID, new { @class = "col-md-4 control-label" })
                        <div class="col-md-4">
                            <div class="input-group form-inline">
                                @*@if (Model.Status == "Authorized")
                                {
                                 @Html.DropDownListFor(model => model.StatusID, new SelectList(ViewBag.HolidayStatusTypeList, "Value", "Text"), "-- Select --", htmlAttributes: new { @class = "form-control", style = "width:156px;" ,@disabled="disabled"})
                                 @Html.HiddenFor(model=>model.StatusID)*@
                                @*<input type="button"id="UnAuthorised" name="UnAuthorised" value="UnAuthorised" style = "width:100px;"class="form-control" placeholder="UnAuthorised" onclick="unAuthorised('@Model.StatusID')">
                                  
                                    <input id="toggle-event" data-toggle="toggle" type="checkbox" data-on="Enabled" data-off="Disabled" data-onstyle="success" data-offstyle="danger" data-width="100" data-height="35">
                                   
                                }
                                else
                                {*@
                                <div>
                                    @Html.DropDownListFor(model => model.StatusID, new SelectList(ViewBag.HolidayStatusTypeList, "Value", "Text"), @*"-- Select --",*@ htmlAttributes: new { @class = "form-control"})
                                </div>
                                
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "text-danger col-md-4" })
                    </div>
                    <div class="form-group form-group-sm">
                        @Html.LabelFor(model => model.StatusChangedOn, new { @class = "col-md-4 control-label" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.StatusChangedOn, new { htmlAttributes = new { @class = "form-control", style = "width:200px;" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.StatusChangedOn, "", new { @class = "text-danger col-md-4" })
                    </div>

                    <div class="form-group form-group-sm">
                        @Html.LabelFor(model => model.StatusChangedBy, new { @class = "col-md-4 control-label" })
                        <div class="col-md-2">
                           @* @Html.DropDownListFor(model => model.StatusChangedByID, new SelectList(ViewBag.ResourceList, "Value", "Text"), "-- Select --", htmlAttributes: new { @class = "form-control", style = "width:156px;" })*@
                            @Html.DisplayFor(model=>model.StatusChangedBy)
                            @Html.HiddenFor(model => model.StatusChangedBy)
                        </div>
                        @Html.ValidationMessageFor(model => model.StatusChangedBy, "", new { @class = "text-danger col-md-4" })
                    </div>
                }
                @if (Model.HolidayID == 0)
                {
                    <div class="col-md-6 form-group-sm">
                        <div class="col-md-4"></div>
                        <div class="col-md-4 "></div>
                        <div class="col-md-4 text-left">
                            &nbsp;
                            @Html.LabelFor(model => model.HolidayStartDate, new { @class = "control-label" })
                        </div>
                    </div>
                    <div class="col-md-6 form-group-sm">
                        @Html.LabelFor(model => model.HolidayEndDate, new { @class = "control-label" })
                    </div>
                }

                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.HolidayDate, new { @class = "col-md-4 control-label" })
                    @if (Model.HolidayID == 0)
                    {
                        <div class="col-md-2">
                            <div>
                                @Html.EditorFor(model => model.HolidayStartDate, new { htmlAttributes = new { @class = "form-control" }, nowIfNull = true })
                            </div>
                            @Html.ValidationMessageFor(model => model.HolidayStartDate, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                                @Html.EditorFor(model => model.HolidayEndDate, new { htmlAttributes = new { @class = "form-control" }, nowIfNull = true })
                          
                        </div>
                        @Html.ValidationMessageFor(model => model.HolidayEndDate, "", new { @class = "text-danger" })
                    }
                    else
                    {
                        <div class="col-md-2">
                            <div>
                                @Html.EditorFor(model => model.HolidayDate, new { htmlAttributes = new { @class = "form-control" }, nowIfNull = true })
                            </div>
                            @Html.ValidationMessageFor(model => model.HolidayDate, "", new { @class = "text-danger" })
                        </div>
                    }
                </div>
                    @if (Model.HolidayID == 0)
                    {
                <div class="form-group form-group-sm" id="holidayAssignDIV">
                    <label class="col-md-4 control-label">Holiday Assign Type</label>
                    <div class="col-md-5">
                        @Html.RadioButtonFor(model => model.AssignType, "Weekly", new { onchange = "onChangeOption(this.value);", style = "margin-top: 9px" })<span class="control-label"> &nbsp; Weekly</span>
                        @Html.RadioButtonFor(model => model.AssignType, "NoofDays", new { onchange = "onChangeOption(this.value);", style = "margin-top: 9px" })<span class="control-label">&nbsp; No of Days</span>
                        @Html.ValidationMessageFor(model => model.AssignType, "", new { @class = "text-danger", id = "AssignTypeMsg" })
                        @if (Model != null && Model.AssignType == "Weekly")
                        {

                                <div id="weekly" style="display:block;">
                                    @Html.EditorFor(model => model.WeeklyMonday)
                                    @Html.LabelFor(model => model.WeeklyMonday) &nbsp;
                                    @Html.EditorFor(model => model.WeeklyTuesday)
                                    @Html.LabelFor(model => model.WeeklyTuesday)&nbsp;
                                    @Html.EditorFor(model => model.WeeklyWednesday)
                                    @Html.LabelFor(model => model.WeeklyWednesday) &nbsp;
                                    @Html.EditorFor(model => model.WeeklyThursday)
                                    @Html.LabelFor(model => model.WeeklyThursday)&nbsp;
                                    @Html.EditorFor(model => model.WeeklyFriday)
                                    @Html.LabelFor(model => model.WeeklyFriday)&nbsp;
                                    @Html.EditorFor(model => model.WeeklySaturday)
                                    @Html.LabelFor(model => model.WeeklySaturday)&nbsp;
                                    @Html.EditorFor(model => model.WeeklySunday)
                                    @Html.LabelFor(model => model.WeeklySunday)&nbsp;
                                </div>

                        }
                        else
                        {
                                <div id="weekly" style="display:none;">
                                    @Html.EditorFor(model => model.WeeklyMonday)
                                    @Html.LabelFor(model => model.WeeklyMonday)&nbsp;
                                    @Html.EditorFor(model => model.WeeklyTuesday)
                                    @Html.LabelFor(model => model.WeeklyTuesday)&nbsp;
                                    @Html.EditorFor(model => model.WeeklyWednesday)
                                    @Html.LabelFor(model => model.WeeklyWednesday)&nbsp;
                                    @Html.EditorFor(model => model.WeeklyThursday)
                                    @Html.LabelFor(model => model.WeeklyThursday)&nbsp;
                                    @Html.EditorFor(model => model.WeeklyFriday)
                                    @Html.LabelFor(model => model.WeeklyFriday)&nbsp;
                                    @Html.EditorFor(model => model.WeeklySaturday)
                                    @Html.LabelFor(model => model.WeeklySaturday)&nbsp;
                                    @Html.EditorFor(model => model.WeeklySunday)
                                    @Html.LabelFor(model => model.WeeklySunday)&nbsp;
                                </div>
                        }

                                @if (Model != null && Model.AssignType == "NoofDays")
                                {
                                    <div id="NoofDays" style="display:block;">
                                        @Html.TextBoxFor(model => model.NoofDays, new
                                   { @*@Value = 1,*@ @class = "form-control",
                                       @type = "number",
                                       @min = "1",
                                       @step = "1",
                                       @style = "width:90px;"
                                   })
                                    </div>
                                }
                                else
                                {
                                    <div id="NoofDays" style="display:none">
                                        @Html.TextBoxFor(model => model.NoofDays, new
                                   { @*@Value = 1,*@ @class = "form-control",
                                       @type = "number",
                                       @min = "1",
                                       @step = "1",
                                       @style = "width:90px;"
                                   })
                                    </div>
                                }
                        </div>
                </div>

                    }
                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.Comment, new { @class = "col-md-4 control-label" })
                    <div class="col-md-2">
                        @Html.TextAreaFor(model => model.Comment, new {  style = "border-radius: .25em;"  })
                    </div>
                    @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger col-md-4" })
                </div>
            </div>
            <div class="form-group col-md-offset-4">
                <input type="submit" name="Save" value="Save" class="btn btn-success" />
                <input type="reset" name="Reset" value="Reset" class="btn btn-default" />
            </div>
        }
    </div>
</div>

<script>
    function onChangeOption(value) {
        if (value == 'Weekly') {
            document.getElementById('weekly').style.display = 'block';
            document.getElementById('NoofDays').style.display = 'none';
        }
        if (value == 'NoofDays') {
            document.getElementById('NoofDays').style.display = 'block';
            document.getElementById('weekly').style.display = 'none';
        }

    }

    function onAjaxSuccess(result) {
        if (result.success==true) {
            //alert("success");
            var model = result.searchHoliday;
            var month = model.Month;
            var year = model.Year;
            var searchResID = model.SearchResourceID;
            //alert(searchResID);
             $.ajax({
                url: '@Url.Action("Index", "Holiday")',
                type: 'POST',
                cache: false,
                dataType: 'html',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({searchHoliday: model }),
                success: function (data) {
                    $("#holidayPanelDIV").html(data);
                    console.log(result.message);
                    successMessage(result.message, 'Success');
                },
                error: function (data) {
                    successMessage(result.message, 'Error');
                }
            })
        }
        else if (result.success == false) {
            console.log(result.message);
            $("#holidayPanelDIV").html(result.partialview);
            successMessage(result.message, 'Error');
       }
       else if (result.succeed == true) {
           $.get('@Url.Action("Index", "Holiday")',
                    function (data) {
                        $("#holidayPanelDIV").html(data);
                        console.log(result.message);
                        successMessage(result.message, 'Success');
                    });
       }
       else if (result.succeed == false) {
           console.log(result.message);
           $("#holidayPanelDIV").html(result.partialview);
           successMessage(result.message, 'Error');
       }
    }
    function onAjaxFailure(result) {
        if (result.error) {
            console.log(result.errorMsg);
            successMessage(result.errorMsg, 'Error');
        }
    }
    function onAjaxBegin() {
        if ($("#HolidayID").val() == 0) {
            if (($("input[type='radio']:checked").val() == "Weekly" && $("input[class='check-box']").is(":checked") == false))
            {
                if ($("input[type='radio']:checked").val() == "Weekly") {
                    if ($("input[class='check-box valid']").is(":checked") == false) {
                        $("#AssignTypeMsg").html("<span class='text-danger'>please Select at least a Week Day</span>").show();
                        return false;
                    }
                }

            }
            return true;
        }
       
    }

    $(document).on('change', '#ResourceID', function () {
        //$("#ExpectedOnTime").empty();
        var resourceID = $("#ResourceID").val() == "" ? 0 : $("#ResourceID").val();
        //alert( $("#ResourceID").val());
        $.ajax({
            url: '@Url.Action("RemainHoliday", "Holiday")',
            type: 'POST',
            dataType: 'json',
            contentType: 'application/json',
            data: JSON.stringify({
                resourceID: resourceID
            }),
            success: function (data) {
                $("#remainHoliday").html(data);
            },
            error: function (data) {
                $("#remainHoliday").html('');
                console.log("empty");
            }
        });
    });

    function BackList() {
        var model =@Html.Raw(Json.Encode(Model.SearchHoliday))
         // model.Year = year;
        // alert(year);
        $.ajax({
            url: '@Url.Action("Index", "Holiday")',
            type: 'POST',
            dataType: 'html',
            data: ({ searchHoliday: model}),
            success: function (data) {
                // alert(data);
                $("#holidayPanelDIV").html(data);

            },
            error: function (data) {
                successMessage(data.message, 'Error');
            }
        })
    }
</script>

@Scripts.Render("~/bundles/jqueryval")